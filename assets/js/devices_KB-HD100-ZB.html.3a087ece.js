"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[70776],{93033:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>o,data:()=>d});var n=a(6254);const r={},o=(0,a(30469).A)(r,[["render",function(e,t){const a=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[t[7]||(t[7]=(0,n.Lk)("h1",{id:"dawon-dns-kb-hd100-zb",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#dawon-dns-kb-hd100-zb"},[(0,n.Lk)("span",null,"Dawon DNS KB-HD100-ZB")])],-1)),(0,n.Lk)("table",null,[t[6]||(t[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[t[2]||(t[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"KB-HD100-ZB")],-1)),(0,n.Lk)("tr",null,[t[1]||(t[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(a,{to:"/supported-devices/#v=Dawon%20DNS"},{default:(0,n.k6)((()=>t[0]||(t[0]=[(0,n.eW)("Dawon DNS")]))),_:1})])]),t[3]||(t[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"IOT Card holder")],-1)),t[4]||(t[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"card, battery_low")],-1)),t[5]||(t[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/KB-HD100-ZB.png",alt:"Dawon DNS KB-HD100-ZB"})])],-1))])]),t[8]||(t[8]=(0,n.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>Press and hold the reset button on the device for +- 5 seconds (until the blue light starts blinking). After this the device will automatically join.</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="card-binary" tabindex="-1"><a class="header-anchor" href="#card-binary"><span>Card (binary)</span></a></h3><p>Indicates if the card is inserted (= true) or not (= false). Value can be found in the published state on the <code>card</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;card&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> card is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p>',8))])}]]),d=JSON.parse('{"path":"/devices/KB-HD100-ZB.html","title":"Dawon DNS KB-HD100-ZB control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Dawon DNS KB-HD100-ZB control via MQTT","description":"Integrate your Dawon DNS KB-HD100-ZB via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-12-27T12:27:11.000Z"},"git":{"updatedTime":1745693617000,"contributors":[{"name":"martingr","username":"martingr","email":"24974244+martingr@users.noreply.github.com","commits":1,"url":"https://github.com/martingr"}],"changelog":[{"hash":"a8cbb0fca92a0255fa170971d1d71d709f28b888","time":1745693617000,"email":"24974244+martingr@users.noreply.github.com","author":"Martin Grzenia","message":"Add innr RCL 231 T (#3729)"}]},"filePathRelative":"devices/KB-HD100-ZB.md"}')}}]);