"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[96320],{44809:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>i,data:()=>c});var a=o(6254);const d={},i=(0,o(30469).A)(d,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[10]||(t[10]=(0,a.Lk)("h1",{id:"schneider-electric-41ecsfwmz-vw",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#schneider-electric-41ecsfwmz-vw"},[(0,a.Lk)("span",null,"Schneider Electric 41ECSFWMZ-VW")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"41ECSFWMZ-VW")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=Schneider%20Electric"},{default:(0,a.k6)((()=>t[0]||(t[0]=[(0,a.eW)("Schneider Electric")]))),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Wiser 40/300-Series Module AC Fan Controller")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"fan (state, mode), indicator_mode, indicator_orientation")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/41ECSFWMZ-VW.png",alt:"Schneider Electric 41ECSFWMZ-VW"})])],-1))])]),t[11]||(t[11]=(0,a.Lk)("h2",{id:"ota-updates",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#ota-updates"},[(0,a.Lk)("span",null,"OTA updates")])],-1)),(0,a.Lk)("p",null,[t[8]||(t[8]=(0,a.eW)("This device supports OTA updates, for more information see ")),(0,a.bF)(o,{to:"/guide/usage/ota_updates.html"},{default:(0,a.k6)((()=>t[7]||(t[7]=[(0,a.eW)("OTA updates")]))),_:1}),t[9]||(t[9]=(0,a.eW)("."))]),t[12]||(t[12]=(0,a.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="fan" tabindex="-1"><a class="header-anchor" href="#fan"><span>Fan</span></a></h3><p>The current state of this fan is in the published state under the <code>fan_state</code> property (value is <code>ON</code> or <code>OFF</code>). To control this fan publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;fan_state&quot;: &quot;ON&quot;}</code> or <code>{&quot;fan_state&quot;: &quot;OFF&quot;}</code>. To read the current state of this fan publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;fan_state&quot;: &quot;&quot;}</code>. To change the mode publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;fan_mode&quot;: VALUE}</code> where <code>VALUE</code> can be: <code>off</code>, <code>low</code>, <code>medium</code>, <code>high</code>, <code>on</code>.</p><h3 id="indicator-mode-enum" tabindex="-1"><a class="header-anchor" href="#indicator-mode-enum"><span>Indicator mode (enum)</span></a></h3><p>Set Indicator Mode.. Value can be found in the published state on the <code>indicator_mode</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;indicator_mode&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;indicator_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>always_on</code>, <code>on_with_timeout_but_as_locator</code>, <code>on_with_timeout</code>.</p><h3 id="indicator-orientation-enum" tabindex="-1"><a class="header-anchor" href="#indicator-orientation-enum"><span>Indicator orientation (enum)</span></a></h3><p>Set Indicator Orientation.. Value can be found in the published state on the <code>indicator_orientation</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;indicator_orientation&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;indicator_orientation&quot;: NEW_VALUE}</code>. The possible values are: <code>horizontal_left</code>, <code>horizontal_right</code>, <code>vertical_top</code>, <code>vertical_bottom</code>.</p>',7))])}]]),c=JSON.parse('{"path":"/devices/41ECSFWMZ-VW.html","title":"Schneider Electric 41ECSFWMZ-VW control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Schneider Electric 41ECSFWMZ-VW control via MQTT","description":"Integrate your Schneider Electric 41ECSFWMZ-VW via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2024-01-31T20:08:01.000Z"},"git":{"updatedTime":1745693617000,"contributors":[{"name":"martingr","username":"martingr","email":"24974244+martingr@users.noreply.github.com","commits":1,"url":"https://github.com/martingr"}],"changelog":[{"hash":"a8cbb0fca92a0255fa170971d1d71d709f28b888","time":1745693617000,"email":"24974244+martingr@users.noreply.github.com","author":"Martin Grzenia","message":"Add innr RCL 231 T (#3729)"}]},"filePathRelative":"devices/41ECSFWMZ-VW.md"}')}}]);