"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[83992],{99395:(e,o,d)=>{d.r(o),d.d(o,{comp:()=>l,data:()=>n});var t=d(6254);const c={},l=(0,d(30469).A)(c,[["render",function(e,o){const d=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[o[7]||(o[7]=(0,t.Lk)("h1",{id:"letv-letv-8key",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#letv-letv-8key"},[(0,t.Lk)("span",null,"LeTV LeTV.8KEY")])],-1)),(0,t.Lk)("table",null,[o[6]||(o[6]=(0,t.Lk)("thead",null,[(0,t.Lk)("tr",null,[(0,t.Lk)("th"),(0,t.Lk)("th")])],-1)),(0,t.Lk)("tbody",null,[o[2]||(o[2]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Model"),(0,t.Lk)("td",null,"LeTV.8KEY")],-1)),(0,t.Lk)("tr",null,[o[1]||(o[1]=(0,t.Lk)("td",null,"Vendor",-1)),(0,t.Lk)("td",null,[(0,t.bF)(d,{to:"/supported-devices/#v=LeTV"},{default:(0,t.k6)((()=>o[0]||(o[0]=[(0,t.eW)("LeTV")]))),_:1})])]),o[3]||(o[3]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Description"),(0,t.Lk)("td",null,"8key switch")],-1)),o[4]||(o[4]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Exposes"),(0,t.Lk)("td",null,"action")],-1)),o[5]||(o[5]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Picture"),(0,t.Lk)("td",null,[(0,t.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/LeTV.8KEY.png",alt:"LeTV LeTV.8KEY"})])],-1))])]),o[8]||(o[8]=(0,t.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>hold_up</code>, <code>single_up</code>, <code>double_up</code>, <code>tripple_up</code>, <code>hold_down</code>, <code>single_down</code>, <code>double_down</code>, <code>tripple_down</code>, <code>hold_left</code>, <code>single_left</code>, <code>double_left</code>, <code>tripple_left</code>, <code>hold_right</code>, <code>single_right</code>, <code>double_right</code>, <code>tripple_right</code>, <code>hold_center</code>, <code>single_center</code>, <code>double_center</code>, <code>tripple_center</code>, <code>hold_back</code>, <code>single_back</code>, <code>double_back</code>, <code>tripple_back</code>, <code>hold_play</code>, <code>single_play</code>, <code>double_play</code>, <code>tripple_play</code>, <code>hold_voice</code>, <code>single_voice</code>, <code>double_voice</code>, <code>tripple_voice</code>.</p>',3))])}]]),n=JSON.parse('{"path":"/devices/LeTV.8KEY.html","title":"LeTV LeTV.8KEY control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"LeTV LeTV.8KEY control via MQTT","description":"Integrate your LeTV LeTV.8KEY via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-09-30T20:52:56.000Z"},"git":{"updatedTime":1745693617000,"contributors":[{"name":"martingr","username":"martingr","email":"24974244+martingr@users.noreply.github.com","commits":1,"url":"https://github.com/martingr"}],"changelog":[{"hash":"a8cbb0fca92a0255fa170971d1d71d709f28b888","time":1745693617000,"email":"24974244+martingr@users.noreply.github.com","author":"Martin Grzenia","message":"Add innr RCL 231 T (#3729)"}]},"filePathRelative":"devices/LeTV.8KEY.md"}')}}]);