"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[67023],{25571:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>o,data:()=>s});var i=a(6254);const r={},o=(0,a(30469).A)(r,[["render",function(e,t){const a=(0,i.g2)("RouteLink");return(0,i.uX)(),(0,i.CE)("div",null,[t[7]||(t[7]=(0,i.Lk)("h1",{id:"feibit-seb01zb",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#feibit-seb01zb"},[(0,i.Lk)("span",null,"Feibit SEB01ZB")])],-1)),(0,i.Lk)("table",null,[t[6]||(t[6]=(0,i.Lk)("thead",null,[(0,i.Lk)("tr",null,[(0,i.Lk)("th"),(0,i.Lk)("th")])],-1)),(0,i.Lk)("tbody",null,[t[2]||(t[2]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Model"),(0,i.Lk)("td",null,"SEB01ZB")],-1)),(0,i.Lk)("tr",null,[t[1]||(t[1]=(0,i.Lk)("td",null,"Vendor",-1)),(0,i.Lk)("td",null,[(0,i.bF)(a,{to:"/supported-devices/#v=Feibit"},{default:(0,i.k6)((()=>t[0]||(t[0]=[(0,i.eW)("Feibit")]))),_:1})])]),t[3]||(t[3]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Description"),(0,i.Lk)("td",null,"SOS button")],-1)),t[4]||(t[4]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Exposes"),(0,i.Lk)("td",null,"sos, battery_low, tamper, battery")],-1)),t[5]||(t[5]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Picture"),(0,i.Lk)("td",null,[(0,i.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/SEB01ZB.png",alt:"Feibit SEB01ZB"})])],-1))])]),t[8]||(t[8]=(0,i.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="sos-binary" tabindex="-1"><a class="header-anchor" href="#sos-binary"><span>SOS (binary)</span></a></h3><p>SOS alarm. Value can be found in the published state on the <code>sos</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> sOS is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p>',9))])}]]),s=JSON.parse('{"path":"/devices/SEB01ZB.html","title":"Feibit SEB01ZB control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Feibit SEB01ZB control via MQTT","description":"Integrate your Feibit SEB01ZB via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-04-08T17:49:06.000Z"},"git":{"updatedTime":1745693617000,"contributors":[{"name":"martingr","username":"martingr","email":"24974244+martingr@users.noreply.github.com","commits":1,"url":"https://github.com/martingr"}],"changelog":[{"hash":"a8cbb0fca92a0255fa170971d1d71d709f28b888","time":1745693617000,"email":"24974244+martingr@users.noreply.github.com","author":"Martin Grzenia","message":"Add innr RCL 231 T (#3729)"}]},"filePathRelative":"devices/SEB01ZB.md"}')}}]);